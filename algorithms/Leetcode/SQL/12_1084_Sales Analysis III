Write an SQL query that reports the products that were only sold in the spring of 2019.
That is, between 2019-01-01 and 2019-03-31 inclusive.

Return the result table in any order.
The query result format is in the following example.
Example 1:
Input:
Product table:
+------------+--------------+------------+
| product_id | product_name | unit_price |
+------------+--------------+------------+
| 1          | S8           | 1000       |
| 2          | G4           | 800        |
| 3          | iPhone       | 1400       |
+------------+--------------+------------+
Sales table:
+-----------+------------+----------+------------+----------+-------+
| seller_id | product_id | buyer_id | sale_date  | quantity | price |
+-----------+------------+----------+------------+----------+-------+
| 1         | 1          | 1        | 2019-01-21 | 2        | 2000  |
| 1         | 2          | 2        | 2019-02-17 | 1        | 800   |
| 2         | 2          | 3        | 2019-06-02 | 1        | 800   |
| 3         | 3          | 4        | 2019-05-13 | 2        | 2800  |
+-----------+------------+----------+------------+----------+-------+
Output:
+-------------+--------------+
| product_id  | product_name |
+-------------+--------------+
| 1           | S8           |
+-------------+--------------+
Explanation:
The product with id 1 was only sold in the spring of 2019.
The product with id 2 was sold in the spring of 2019 but was also sold after the spring of 2019.
The product with id 3 was sold after spring 2019.
We return only product 1 as it is the product that was only sold in the spring of 2019.
------------------------------------------------------------------------------------------------------
--Runtime: 968 ms, faster than 79.49% of MySQL
with temp as(
select
	p.product_id,
	p.product_name,
	s.sale_date
from
	sales_1 s
 join product_1 p
on	p.product_id = s.product_id)
select distinct product_id, product_name
from temp
where
	sale_date between '2019-01-01' and '2019-03-31'
	and product_id not in (select distinct product_id
from temp
where
	sale_date < '2019-01-01' or sale_date > '2019-03-31');

-- Runtime: 1076 ms, faster than 57.00%
select
	p.product_id,
	p.product_name
from
	sales s
join product p
on
	p.product_id = s.product_id
group by
	p.product_id,
	p.product_name
having
	sum(case when s.sale_date between '2019-01-01' and '2019-03-31' then 1 else 0 end) > 0
	and sum(case when s.sale_date < '2019-01-01' or s.sale_date > '2019-03-31' then 1 else 0 end) = 0;