--+-------------+------+
--| Column Name | Type |
--+-------------+------+
--| seat_id     | int  |
--| free        | bool |
--+-------------+------+
--seat_id is an auto-increment primary key column for this table.
--Each row of this table indicates whether the ith seat is free or not. 1 means free while 0 means occupied.
--
--Write an SQL query to report all the consecutive available seats in the cinema.
--
--Return the result table ordered by seat_id in ascending order.
--
--The test cases are generated so that more than two seats are consecutively available.
--
--The query result format is in the following example.
--
--Example 1:
--Input:
--Cinema table:
--+---------+------+
--| seat_id | free |
--+---------+------+
--| 1       | 1    |
--| 2       | 0    |
--| 3       | 1    |
--| 4       | 1    |
--| 5       | 1    |
--+---------+------+
--Output:
--+---------+
--| seat_id |
--+---------+
--| 3       |
--| 4       |
--| 5       |
--+---------+

--Using self join
--Runtime: 443 ms, faster than 25.28%
select
	distinct c1.seat_id
from
	Cinema c1 join
	Cinema c2
on
	abs(c1.seat_id - c2.seat_id) = 1
	and c1.free = 1
	and c2.free = 1
    order by c1.seat_id asc;

--Using analytics function
--Runtime: 672 ms, faster than 7.31% of MySQL
select
	seat_id
from
	(
	select
		seat_id,
		free,
		lead(free, 1) over(order by seat_id) as free_lead,
		lag(free, 1) over(order by seat_id) as free_lag
	from
		Cinema c ) t1
where
	(free = 1 and free_lead = 1)
	or (free = 1 and free_lag = 1)
